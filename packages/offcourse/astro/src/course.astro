---
import type { Course } from "@offcourse/schema";
import { CollectionType, QueryType } from "@offcourse/schema";
import { Offcourse } from "@offcourse/ui"
import { BaseHead, OGType } from "./BaseHead";
import { handleQuery } from "@offcourse/db/query";
import Layout from "./layouts/Base.astro"

export async function getStaticPaths() {
  const data = await handleQuery({
    type: QueryType.enum.GET_COURSES,
    payload: CollectionType.enum.ALL
  }, false)
  const courses = (data?.payload || []) as Course[];
  return courses.map((course) => {
    const { courseId } = course;
    return {
      params: { courseId },
      props: {
        course
      }
    }
  })
}
const course = Astro.props.course;

const description = "COURSES";
const title = "Offcourse";
---
<Layout {title} >
  <BaseHead 
    slot="og:data" 
    type={OGType.ARTICLE} 
    url={Astro.url}
    {title} 
    {description} 
    url={Astro.url} />
  <main class="bg-white text-black dark:bg-black dark:text-white w-full px-5 sm:px-8 gap-8 p-8 lg:py-12 mx-auto">
    <Offcourse data={[course]} client:load/>
  </main>
</Layout>
